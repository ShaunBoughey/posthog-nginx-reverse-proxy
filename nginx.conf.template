worker_processes auto;

events { worker_connections 1024; }


http {
    sendfile on;

    server {
        listen ${PORT};

        server_name ${SERVER_NAME};

        # DNS resolver with 1 second TTL for semi-dynamic DNS resolution.
        # 1s is the shortest time you can set for a TTL, because 0s is equivalent to unset.
        # If deploying on Railway, ensure ipv6=off because it doesn't support outbound IPv6.
        resolver 8.8.8.8 8.8.4.4 valid=1s ipv6=off;

        location = /health {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Content-Type' 'text/plain' always;
            return 200 'OK';
        }

        location ~ ^/static/(.*)$ {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET' always;
            set $posthog_static "https://${POSTHOG_CLOUD_REGION}-assets.i.posthog.com/static/";
            # use variable to force proper DNS re-resolution, also must manually pass along path
            proxy_pass $posthog_static$1$is_args$args;
            proxy_set_header Host "${POSTHOG_CLOUD_REGION}-assets.i.posthog.com";
        }

        location ~ ^/(.*)$ {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET' always;
            set $posthog_main "https://${POSTHOG_CLOUD_REGION}.i.posthog.com/";
            # use variable to force proper DNS re-resolution, also must manually pass along path
            proxy_pass $posthog_main$1$is_args$args;
            proxy_set_header Host "${POSTHOG_CLOUD_REGION}.i.posthog.com";
        }

    }
}
